
-celá práce, každá kapitola, každá podkapitola má -úvod, stať a závěr? (Doporučení dr. Berana)
-U převzatých obrázků/myšlenek/tabulek použijte citaci zdroje.
-shrnutí X zhodnocení současného stavu - použít někde v nadpisech? :D 
-při prvním výskytu nějakého odborného pojmu v angličtině uvedete obě verze (českou a anglickou) s tím, že tu, kterou nadále nebudete využívat, uvedete do závorky třeba i s komentářem (například „...octree (oktalový strom, nadále bude využívána jen anglická forma, protože
to je zvykem i mezi odborníky v oboru)...“).
-Zkratky by se při prvním užití v textu měly vysvětlit. Alternativou (asi lepší, ale pracnější) je uvedení seznamu zkratek, kde se na jednom místě přehledně vysvětlí všechny zkratky.
-Budoucí/minulý/přítomný čas by měl být v práci pojat tak, že obecně vzato je práce popisem obecně platných skutečností (pak používejte přítomný čas) v kombinaci s popisem Vaší práce (ta už proběhla, tak používejte čas minulý). V plánech budoucí práce samozřejmě používejte čas budoucí. Nejvíc ze všeho ale v tomto případě použijte „cit“ a přizpůsobte jazyk situaci tak, aby se práce dobře četla

jdu na kap 4


Obecné otázky (z template):
• Jak byste vystihli podstatu svého řešení ve třech až pěti krátkých větách?
• Jaké jsou silné stránky Vašeho řešení?
• Jaké jsou konkrétní argumenty, že to, co jste udělali, je dobré?
• Kdyby chtěl někdo být na Vaši práci zlý – co by vytkl?
• Co byste mu odpověděli?
• Jaká klíčová slova by měl člověk zadat do vyhledávače, aby Vaše diplomka byla relevantní odpovědí?


#######################################################################
#######################################################################
#######################################################################
TEXT NA PŘIDÁNÍ:
----------------------
------------------------
Zmínit že embedded systems jak bylo definované by nemel uzivatel tusit ze dela s pc, ale jelikoz je to open source řešení pro nadšence v oboru, tak samozřejmě tomu tak nebude. Bylo by potřeba vypnout porty, zabudovat pc do krabičky atd atd...
---------------
K napájení bude využito 5v z usb...(popsat někde u modulů a zaroven popsat že jsem neřešil ani jiné napájení (jako z baterií), ani režim spánku)
--------------------
-----------------------------------------
zahrnout nadpisek pro lokální funkci a v ní zmínit že jsem váhal že lokál bude z 192.168.... a global z x.web.app, ale nakonec jsem se rohodl i do x.web.app přidat kontrolu na lokální server...
------
Logování chyb
-fatal eror, eror,eror z modulu
-vytváří se pokud neexistuje při každé chybě
------------
ten problém s VPN v lokální síti co říkal vedoucí práce...

-------------
DNS pro 192.168.....?



#######################
Vše:
-------------
Protože systém již ted je systém poměrně složitý (cca X řádků kódu), a protože chci myslet na budoucí rozvoj, bylo potřeba se nějakým způsobem věnovat i detekci chyb...rozvést jak jsem se věnoval detekci chyb v jednotlivých app 
---------------------------------------

počet zařízení v systému omezen pouze schopnostmi sítě
#######################
WEB:
-------------------
Uvést že jsem se snažil o co největší obecnost komponent (např framelist je "jen" hloupý frame list) - i když všude jsem to v rámci BP nedodržel, ale bylo by dobré to upravit...Uvést že jsem se o to snažil hlavně tam, kde to mělo smysl (např list frame je používaný několikrát, takže u něj to smysl mělo....)
-------------------------

Uvést že jsem váhal mezi přímo rozšířením HTML elementů (custom elementy) a kompozicí (je to správně?) a vysvětlit proč jsem nezvolil kompozici... (přístup k objektům díky DOMu)
-------------------------
#######################
Server:
-------------
Zmínit vypínání naslouchání na změny v serveru při přechodu na offline režim a vysvětlit proč to tak je (aby se při online nepřepsali automaticky data)
------------
Proč je výodné mít internetovou databázi? Představme si že server z nějakého důvodu nepoběží (např. výpadek napětí bez záložního zdroje) - pak by nešlo komunikovat na dálku a přitom by to mohlo být důležité
------------
synchronizace databází
------------
statická ip adresa (a popsat že je možnost dynamické když se nenastaví)
------------------
Zmínit express js

-----------------
Konfigurace serveru
Aby byl systém lépe přizpůsobitelný potřebám konkrétním uživatelům, rozhodl jsem se některé vlastnosti zakomponovat do konfiguračního souboru. Konfigurační soubor leží v kořenovém adresáři serveru a nese název config.json. V případě, že soubor v adresáři chybí, tak jej aplikace serveru vytvoří při startu (s výchozími hodnotami). Je tedy zřejmé, že pokud by uživatel chtěl konfiguraci systému restartovat, postačí soubor smazat. Jelikož se však soubor načítá při startu serveru, tak se změny projeví až po opětovném startu serveru.
Jak vyplývá z názvu konfiguračního souboru (config.json) jedná se o obyčejný soubor ve formátu JSON. Je tedy snadné s ním po načtení manipulovat jako s Javascriptovým souborem. Pro ještě pohodlnější (budoucí) práci s tímto souborem jsem vytvořil v aplikaci serveru třídu pro snadný přístup a editaci jednotlivých položek konfigurace.
Mezi vlastnosti, které je možné konfigurovat patří například:

 -port, na kterém (lokálně) poběží webová aplikace
 -údaje k připojení k Firebase projektu (pokud by uživatel nechtěl využívat "společné" databáze, z této práce)
 -Zda se mají při startu serveru vymazat logovací soubory o chybách
 -Zda se má při pádu aplikace ihned v prohlížeči otevřít logovací soubor o chybách
 A několik dalších položek. Detaily k jednotlivým položkám je možné najít v příloze \ref{konfigurace}.
#######################
moduly:
------------------------------------
Výstup - návrh relé a tranzistoru součástek (uvést tam i že jsem netestoval relé 230V, ale dle specifikace by to mělo fungovat)
--------------
Nevyužívám CoAP cestu, jak by se dalo očekávat, ale s výhodou jsem ji použil pro ty callbacky...
------------
statická ip adresa (a popsat že je možnost dynamické když se nenastaví)

















------------------
Rozšiřování systému
Pro rozšiřování zatím nebyl vyvinut žádný jednoduchý systém (na základě konfigurace nebo tak něco)
Pro přidání nových i2c snímačů je potřeba:
v ESP.h přidat do výčtu IN_TYPE konstantu pro daný snímač a knihovnu
V ESP.ino: upravit funkci getI2CVal() (přidat podmínku na nový snímač) a stejně tak isDifferentEnough(). Obecně je potřeba se řídit instrukcemi posílanými po sériové lince. Je možné, že konkrétní snímač bude vyžadovat ještě i nějakou vlastní úpravu kódu, to takhle obecně nelze předem určit
Pro web: přidat záznam do statického pole I2C třídy BusDevices.

pro server: 
V souboru ESP.ts - přidat do výčtu IN_TYPE konstantu pro daný snímač (stejný název jako pro výčet v ESP.h)
                - přidat záznam do statického pole IN_TYPE_TO_STR třídy SensorInfo
-------------------